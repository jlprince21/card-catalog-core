// <auto-generated />
using System;
using CardCatalog.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CardCatalog.Core.Migrations
{
    [DbContext(typeof(CardCatalogContext))]
    [Migration("20200410140254_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("CardCatalog.Core.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Checksum")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("CardCatalog.Core.ListingTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Listing")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Tag")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Listing");

                    b.HasIndex("Tag");

                    b.ToTable("ListingTags");
                });

            modelBuilder.Entity("CardCatalog.Core.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TagTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("TagTitle")
                        .HasName("AlternateKey_TagTitle");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("CardCatalog.Core.ListingTag", b =>
                {
                    b.HasOne("CardCatalog.Core.Listing", "ListingRefId")
                        .WithMany()
                        .HasForeignKey("Listing")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardCatalog.Core.Tag", "TagRefId")
                        .WithMany()
                        .HasForeignKey("Tag")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
